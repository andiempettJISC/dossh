#!/bin/bash

Ending() {
    echo
    echo "Closing"
    exit 0
}

trap Ending SIGTERM SIGINT

Help()
{
   # Display Help
   echo
   echo "A simple interactive CLI utility to lookup existing digitalocean droplets and initialise and SSH session."
   echo
   echo "Syntax: dossh [-f <localport:remoteport>]"
   echo "options:"
   echo "f      [optional] Specify the local and remote port to setup port forwarding"
   echo
   exit 1
}

while getopts f:h flag
do
    case "${flag}" in
        f) port=${OPTARG};;
        h) # display Help
          Help
          exit 1;;
        *) Help;;
    esac
done

# Check for do token. Prompt if the env var doesnt exist.
if [ -z $DIGITALOCEAN_ACCESS_TOKEN ];
then
    echo "Please input your Digitalocean access token:"
    read -s DIGITALOCEAN_ACCESS_TOKEN
fi

echo "Which droplet tag are you searching for?"
read droplet_type

# check the search term is > 3 chars
while [ "${#droplet_type}" -lt "3" ];
do
    echo "A minimum of 3 characters is required. Please try again."
    read droplet_type
done

# Convert to lowercase
droplet_type=`echo "$droplet_type" | awk '{print tolower($0)}'`

echo "Looking up droplets ..."

droplets=`curl -s -X GET \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN" \
  "https://api.digitalocean.com/v2/droplets?page=1&per_page=200" | jq -r '[.droplets[] | select (.tags[] | ascii_downcase | test('\"$droplet_type\"')) | {name: .name, ip: (.networks.v4[] | select(.type == "private")).ip_address}] | unique_by(.name) | .[]'`

if [ -z "$droplets" ];
then
    echo "Sorry! No droplets found matching a tag like $droplet_type. Please try again"
    exit 1
fi

droplet_names=`echo $droplets | jq -r '.name'`

options=($droplet_names)

droplet_ssh () {
    # hostname
    # droplets
    droplet_ip=`echo $2 | jq -r '. | select(.name == '\"$1\"') | .ip'`
    
    echo "Attempting to authenticate and connect to: $1. Please press Allow in your browser"
    if [[ ! -z  "$port" ]];
    then
        forwardports=(${port//:/ })
        echo "Forwarding remote port: ${forwardports[1]} to local port: ${forwardports[0]}"
        echo "Do Not close the session or connectivity will be lost!"
        ssh -N -L ${forwardports[0]}:localhost:${forwardports[1]} $droplet_ip 
    else
        ssh $droplet_ip
    fi
}

if [ ${#options[@]} == 1 ];
then
    opt=${options[0]}
    echo "Found 1 droplet matching $opt"
    droplet_ssh $opt "$droplets"
    exit 1
else
    PS3='Please enter your choice: '
    select opt in "${options[@]}"
    do
    case $opt in
        "Exit")
        echo "Exiting..."
        break;;
    esac

    droplet_ssh $opt "$droplets"
    exit 1
    done
fi
